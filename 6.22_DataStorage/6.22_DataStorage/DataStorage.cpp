#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//(1)简叙大端字节序和小端字节序的概念，并用程序验证当前机器的字节序
//大端字节序：数据的高位存放在地址的低位，数据的地位存放在地址的高位
//小端字节序:数据的高位存放在地址的高位，数据的地位存放在地址的地位
//#include<stdio.h>
//int Judge_sys() 
//{
//	//大端返回1，小端返回0
//	int a = 1;
//	char* p =(char *) & a;
//	if (*p == 0)
//	{
//		return 1;
//	}
//	else
//		return 0;
//
//}
//int main() 
//{
//	printf("%d",Judge_sys());
//}

//(2)判断下列结果
//int main() 
//{
//	char a = -1;
//	signed char b = -1;
//	unsigned char c = -1;
//	printf("a=%d,b=%d,c=%d", a, b, c);//-1 -1 255
//
//	//-1  原码10000000 00000000 00000000 00000001
//	//    补码11111111 11111111 11111111 11111111
//	//a 由于a是char类型，只能存储一个字节的二进制位，因此a的存储的二进制序列被截断为11111111
//	//又因为是有符号数，在打印整型时，整型提升在左边补1，补码为11111111 11111111 11111111 11111111
//	//因此为a=%d结果为-1
//	//b 同理为-1
//	//c 整型提升与a相同，但由于c是无符号char 结果为255
//}

//(3)
//int main() 
//{
//	char a = -128;
//	printf("%u\n", a);//11111111 111111111 11111111 10000000
//	return 0;
//}
//// -128 原码-10000000 00000000 00000000 10000000
////反-11111111 11111111 11111111 01111111
////补-11111111 11111111 11111111 10000000            
////11111111 11111111 11111111 10000000  


//(4)
//int main()
//{
//	//char 放不下128 127+1=-128
//	char a = 128;
//	printf("%u\n", a);//4294967168
//	return 0;
//}
// 

//（5）
//int main() {
//	int i = -20;
//	//1000000 00000000 00000000 00010100
//	//1111111 11111111 11111111 11101011
//	//1111111 11111111 11111111 11101100 - 补码
//
//	unsigned  int  j = 10;
//	//0000000 00000000 00000000 00001010 - 补码
//
//	//1111111 11111111 11111111 11101100 - 补码
//	//0000000 00000000 00000000 00001010 - 补码
//	//1111111 11111111 11111111 11110110 - 结果 补码
//	//1111111 11111111 11111111 11110101 - 反码
//	//1000000 00000000 00000000 00001010 - 原码
//	printf("%d\n", i + j);//-10
//	//按照补码的形式进行运算，最后格式化成为有符号整数
//}

//#include <windows.h>
#include <stdio.h>
//int main()
//{
//    unsigned int i;
//    for (i = 9; i >= 0; i--)
//    {
//        printf("%u\n", i);
//        //9 8 7 6 5 4 3 2 1 0 4294967295 4294967294 4294967293……
//        //死循环
//    }
//    return 0;
//}

#include<string.h>
//int main() {
//    char a[1000];
//    int i;
//    for (i = 0; i < 1000; i++)
//    {
//        a[i] = -1 - i;//char的范围-128-->127
//        //-1 -2 -3 …… -127 -126 -125 …… -1 0
//    }
//    printf("%d", strlen(a));//255
//    //
//}

#include <stdio.h>
unsigned char i = 0;//0-255
int main()
{
    for (i = 0; i <= 255; i++)
    {
        printf("hello world\n");//死循环
    }
    return 0;
}
